# Generated by Django 2.2.13 on 2020-06-14 09:45

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.TimeField(default=datetime.datetime(2020, 6, 14, 9, 45, 40, 180706), editable=False)),
                ('created_when', models.DateField(default=datetime.datetime(2020, 6, 14, 9, 45, 40, 180741), editable=False)),
                ('disabled', models.BooleanField(default=False, editable=False)),
                ('disabled_at', models.TimeField(blank=True, default=None, editable=False, null=True)),
                ('disabled_when', models.DateField(blank=True, default=None, editable=False, null=True)),
                ('disabled_reason', models.CharField(blank=True, default=None, editable=False, max_length=1024, null=True, verbose_name='Specify the reason to disable this product')),
                ('dropped', models.BooleanField(default=False, editable=False)),
                ('dropped_at', models.TimeField(blank=True, default=None, editable=False, null=True)),
                ('dropped_when', models.DateField(blank=True, default=None, editable=False, null=True)),
                ('dropped_reason', models.CharField(blank=True, default=None, editable=False, max_length=1024, null=True, verbose_name='Specify the reason to drop this object')),
                ('mothers_last_name', models.CharField(blank=True, default=None, max_length=254, null=True, verbose_name='Mothers last name')),
                ('middle_name', models.CharField(blank=True, default=None, max_length=254, null=True, verbose_name='Middle name')),
                ('phishing', models.BooleanField(default=False, editable=False)),
                ('phishing_at', models.TimeField(blank=True, default=None, editable=False, null=True)),
                ('phishing_when', models.DateField(blank=True, default=None, editable=False, null=True)),
                ('email_confirmed', models.BooleanField(default=False, editable=False)),
                ('email_confirmed_at', models.TimeField(blank=True, default=None, editable=False, null=True)),
                ('email_confirmed_when', models.DateField(blank=True, default=None, editable=False, null=True)),
                ('email_approved', models.BooleanField(default=False, editable=False)),
                ('email_approved_at', models.TimeField(blank=True, default=None, editable=False, null=True)),
                ('email_approved_when', models.DateField(blank=True, default=None, editable=False, null=True)),
                ('first_time_login', models.BooleanField(default=False)),
                ('show_dlg_first_tutorial_not_completed', models.BooleanField(default=True)),
                ('first_tutorial_completed', models.BooleanField(default=False)),
                ('current_step_first_tutorial', models.PositiveSmallIntegerField(default=0)),
                ('created_with_fb', models.BooleanField(default=False, editable=False)),
                ('fb_id', models.CharField(blank=True, default=None, editable=False, max_length=1024, null=True)),
                ('created_with_google', models.BooleanField(default=False, editable=False)),
                ('google_id', models.CharField(blank=True, default=None, editable=False, max_length=1024, null=True)),
                ('gender', models.CharField(blank=True, choices=[(' ', '-- Prefer not to say --'), ('M', 'Male'), ('F', 'Female')], default=None, max_length=1, null=True, verbose_name='Gender')),
                ('dob', models.DateField(blank=True, default=None, null=True, verbose_name='Date of birth')),
                ('fb', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True, verbose_name='FB account')),
                ('twitter', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True, verbose_name='Twitter account')),
                ('instagram', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True, verbose_name='Instagram account')),
                ('created_by_user', models.ForeignKey(db_column='created_by_user', default=1, on_delete=django.db.models.deletion.PROTECT, related_name='users_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ratings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('comments', models.CharField(blank=True, default=None, max_length=1024, null=True, verbose_name='Comments')),
                ('email_sent', models.BooleanField(default=False, editable=False)),
                ('user', models.OneToOneField(db_column='user_id', default=None, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
        ),
    ]
